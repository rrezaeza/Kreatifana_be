generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // Or "mysql", "sqlite", etc.
  url      = env("DATABASE_URL")
}

model User {
  id                String             @id @default(uuid())
  name              String
  email             String             @unique
  password          String
  isAdmin           Boolean            @default(false)
  createdAt         DateTime           @default(now())
  products          Product[]
  favoriteProducts FavoriteProduct[]
  purchasedProducts PurchasedProduct[]
  reviews           Review[]
  bio               String?
  avatar            String?
}

model Product {
  id           String             @id @default(uuid())
  title        String
  description  String
  price        Float
  slug         String             @unique
  fileUrl      String?
  thumbnailUrl String
  user         User               @relation(fields: [userId], references: [id])
  userId       String
  category     Category           @relation(fields: [categoryId], references: [id])
  categoryId   String
  tags         ProductTag[]
  reviews      Review[]
  favoritedBy  FavoriteProduct[]  @relation(name: "favoriteProducts")
  purchasedBy  PurchasedProduct[] @relation(name: "purchasedProducts")
}

model Category {
  id       String    @id @default(uuid())
  name     String    @unique
  products Product[]
}

model Tag {
  id    String        @id @default(uuid())
  name  String        @unique
  products ProductTag[]
}

model ProductTag {
  id        String   @id @default(uuid())
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  tag       Tag      @relation(fields: [tagId], references: [id])
  tagId     String
  @@unique([productId, tagId])
}

model Review {
  id        String   @id @default(uuid())
  text      String
  rating    Int
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
}

model FavoriteProduct {
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  productId String
  product   Product  @relation(fields: [productId], references: [id], name: "favoriteProducts")
  @@id([userId, productId])
}

model PurchasedProduct {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  productId String
  product   Product  @relation(fields: [productId], references: [id], name: "purchasedProducts")
  @@index([userId])
  @@index([productId])
}
