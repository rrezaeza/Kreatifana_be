generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String             @id @default(uuid())
  name              String
  email             String             @unique
  password          String
  isAdmin           Boolean            @default(false)
  createdAt         DateTime           @default(now())
  username          String?            @unique
  products          Product[]
  favoriteProducts  FavoriteProduct[]
  purchasedProducts PurchasedProduct[]
  reviews           Review[]
  bio               String?
  avatar            String?
}

model Category {
  id        String    @id @default(uuid())
  name      String    @unique
  slug      String?   @unique // <-- Ubah baris ini (String tanpa '@default("")')
  products  Product[]
}

/// **GANTI** `ProductTag` â†’ `Tag`
model Tag {
  id       String    @id @default(uuid())
  name     String    @unique
  products Product[] // implicit relation back to Product.tags
}

model Product {
  id            String    @id @default(uuid())
  title         String
  description   String
  price         Float
  slug          String    @unique
  fileUrl       String?
  thumbnailUrl  String
  published     Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt @default(now()) // <-- Ubah baris ini

  // Relationships
  userId        String
  user          User      @relation(fields: [userId], references: [id])
  categoryId    String
  category      Category  @relation(fields: [categoryId], references: [id])
  tags          Tag[]
  reviews       Review[]
  favoritedBy   FavoriteProduct[] @relation("favoriteProducts")
  purchasedBy   PurchasedProduct[] @relation("purchasedProducts")
}

model Review {
  id        String   @id @default(uuid())
  text      String
  rating    Int
  createdAt DateTime @default(now()) // <--- TAMBAHKAN BARIS INI
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  productId String
  product   Product  @relation(fields: [productId], references: [id])
}

model FavoriteProduct {
  userId    String
  productId String
  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id], name: "favoriteProducts")
  @@id([userId, productId])
}

model PurchasedProduct {
  id        String   @id @default(uuid())
  userId    String
  productId String
  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id], name: "purchasedProducts")
  @@index([userId])
  @@index([productId])
}
